{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Contailner","styled","div","Title","span","Grid","Section","title","children","protoTypes","PropTypes","string","isRequired","oneOfType","arrayOf","node","role","aria-label","Text","props","color","Message","text","Container","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","name","first_air_date","TVContainer","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.080b0798.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Contailner = styled.div`\n    :not(:last-child) {\n        margin-bottom: 50px;\n    }\n`;\n\nconst Title = styled.span`\n    font-size:14px;\n    font-weight: 600;\n`;\n\nconst Grid = styled.div`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`;\n\n\nconst Section = ({title, children}) => (\n    <Contailner>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Contailner>\n);\n\nSection.protoTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n}\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Contailner = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    font-size: 28px;\n    margin-top: 20px;\n`;\n\nexport default () => <Contailner><span role=\"img\" aria-label=\"Loading\">⏰</span></Contailner>;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Contailner = styled.div`\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Text = styled.span`\n    color: ${props => props.color};\n`;\n\n\nconst Message = ({text, color}) => <Contailner><Text color={color}>{text}</Text></Contailner>\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n};\n\nexport default Message;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Helmet>\n          <title>Movies | Nomflix</title>\n        </Helmet>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default HomePresenter;","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: \"dce837554c6bf8ed9052feb7e99624dc\",\n        language: \"ko-KR\"\n    }\n});\n\n\nexport const moviesApi = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: (id) => api.get(`movie/${id}`,{\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: (term) => api.get(\"search/movie\",{\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n}\n\nexport const tvApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    showDetail: (id) => api.get(`tv/${id}`,{\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: (term) => api.get(\"search/tv\",{\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n}","import HomContainer from \"./HomContainer\"\n\nexport default HomContainer","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\"\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component{\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true,\n    };\n\n    async componentDidMount(){\n        try{\n            const { data: { results: nowPlaying } } = await moviesApi.nowPlaying();\n            const { data: { results: upcoming } } = await moviesApi.upcoming();\n            const { data: { results: popular } } = await moviesApi.popular();\n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular\n            })\n        } catch {\n            this.setState({\n                error: \"Can't find movie information.\"\n            })\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        return (\n            <HomePresenter\n                nowPlaying={nowPlaying} \n                upcoming={upcoming} \n                popular={popular} \n                error={error}\n                loading={loading}\n            />\n        )\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\"\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n    color: white;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    background-color:rgba(20, 20, 20, 0.8);\n    z-index: 10;\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8)\n`;\n\nconst List = styled.ul`\n    display: flex;\n`;\n\nconst Item = styled.li`\n    width: 80px;\n    height: 50px;\n    text-align: center;\n    border-bottom: 3px solid ${props => (props.current ? \"#3498db\" : \"transparent\")};\n    transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height:50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport default withRouter(({location: { pathname }}) => (\n    <Header>\n        <List>\n            <Item current={pathname === \"/\"}>\n                <SLink to=\"/\">Movies</SLink>\n            </Item>\n            <Item current={pathname === \"/tv\"}>\n                <SLink to=\"/tv\">TV</SLink>\n            </Item>\n            <Item current={pathname === \"/search\"}>\n                <SLink to=\"/search\">Search</SLink>\n            </Item>\n        </List>\n    </Header>\n));","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  error,\n  updateTerm\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\"\n\nexport default SearchContainer;","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nexport default class extends React.Component{\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        error: null,\n        loading: false\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const { searchTerm } = this.state;\n        if(searchTerm !== \"\"){\n            this.searchByTerm();\n        }\n    }\n\n    updateTerm = (event) => {\n        const { target: { value } } = event;\n        this.setState({\n            searchTerm: value\n        })\n    }\n\n    searchByTerm = async() => {\n        const { searchTerm } = this.state;\n        this.setState({loading: true});\n        try {\n            const { data: { results: movieResults }} = await moviesApi.search(searchTerm);\n            const { data: { results: tvResults }} = await tvApi.search(searchTerm);\n            this.setState({\n                movieResults,\n                tvResults\n            });\n        } catch {\n            this.setState({error: \"Can't find results.\"})\n        } finally {\n            this.setState({ loading: false })\n        }\n    }\n\n    render(){\n        const {movieResults, tvResults, searchTerm, error, loading} = this.state;\n        return (\n            <SearchPresenter \n                movieResults={movieResults} \n                tvResults={tvResults} \n                searchTerm={searchTerm} \n                error={error} \n                loading={loading} \n                handleSubmit={this.handleSubmit}\n                updateTerm={this.updateTerm}\n            />\n        );\n    }\n\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.title ? result.title : result.name}{\" \"}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.title\n              ? result.title\n              : result.name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\"\n\nexport default DetailContainer;","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Header from \"Components/Header\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`; \n\nexport default globalStyles","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\nimport \"./api\"\n\nReactDOM.render(<App />,  document.getElementById('root'));"],"sourceRoot":""}